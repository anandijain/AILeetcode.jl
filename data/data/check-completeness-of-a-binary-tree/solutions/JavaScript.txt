Here's the solution using BFS:

```
function TreeNode(val, left, right) {
    this.val = (val===undefined ? 0 : val)
    this.left = (left===undefined ? null : left)
    this.right = (right===undefined ? null : right)
}

var isCompleteTree = function(root) {
    if (!root) return true;
    
    let queue = [root];
    let endOfLevelFound = false;

    while (queue.length !== 0) {
        let currentNode = queue.shift();
        
        if (!currentNode) {
            endOfLevelFound = true;
        } else {
            if (endOfLevelFound) /* end node not leftmost */ 
                return false;

            queue.push(currentNode.left);
            queue.push(currentNode.right);
        }
    }

    return true;
};
```

This solution uses a queue to perform BFS on the binary tree. If the tree is not complete, it returns false. Otherwise, it returns true.